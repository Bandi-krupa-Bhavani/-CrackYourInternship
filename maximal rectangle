class Solution {
    public int maximalRectangle(char[][] matrix) {
        if(matrix.length==0) return 0;
        int rows=matrix.length,cols=matrix[0].length,maxArea=0;
        int[] heights=new int [cols];
        for(char[] row:matrix){
          for(int j=0;j<cols;j++){
            heights[j]=row[j]=='1'?heights[j]+1:0;
          }
          maxArea=Math.max(maxArea,largestRectangleArea(heights));
        }
        return maxArea;
    }
    private int largestRectangleArea(int[] heights){
        int n=heights.length,maxArea=0;
        int[] stack=new int[n+1];
        int top=-1;
        for(int i=0;i<=n;i++){
            int height=i==n?0:heights[i];
            while(top>=0&&height<heights[stack[top]]){
                int h=heights[stack[top--]];
                int width=top<0?i:i-stack[top]-1;
                maxArea=Math.max(maxArea,h*width);
            }
            stack[++top]=i;
        }
        return maxArea;
    }
}
